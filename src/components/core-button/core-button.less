@import (reference) "https://unpkg.com/@core-ds/primitives/core-primitives.less";

// :host targets the custom element compiled by Stencil
:host {
  display: inline-flex;
  font: 14px "Inter", sans-seif;

  // @Prop basic variation
  &(.basic[loading]) {
    slot {
      color: @color-gray-3;
    }

    [class^="button-loading-"]::after {
      border: 2px solid @color-gray-3;
      border-top-color: currentColor;
    }
  }

  // @Prop primary variation
  &(.primary) {
    .native-element {
      background: @color-blue;
      border-color: transparent;
      color: @color-white;

      &:hover {
        background: @color-blue-dark-1;
      }

      &:active,
      &:focus {
        background: @color-blue-dark-2;
      }

      &:active {
        border-color: transparent;
        box-shadow: 0 0 0 2px @color-blue-dark-2;
        outline: 0;
      }

      &:disabled {
        background: @color-gray-1;
        color: @color-gray-5;
        opacity: 0.5;
      }
    }
  }

  &(.primary[loading]) {
    slot {
      color: @color-blue-light-2;
    }

    [class^="button-loading-"]::after {
      border: 2px solid @color-blue-light-2;
      border-top-color: currentColor;
    }
  }

  // @Prop secondary variation
  &(.secondary) {
    .native-element {
      background: @color-gray-1;
      border-color: transparent;

      &:hover {
        background: @color-gray-2;
      }

      &:active,
      &:focus {
        background: @color-gray-3;
      }

      &:active {
        border-color: transparent;
        box-shadow: 0 0 0 2px @color-gray-4;
        outline: 0;
      }

      &:disabled {
        background: @color-gray-1;
        color: @color-gray-5;
        opacity: 0.5;
      }
    }
  }

  // @Prop dark variation
  &(.dark) {
    .native-element {
      background: @color-green;
      border-color: transparent;
      color: @color-white;

      &:hover,
      &:active,
      &:focus {
        background: @color-green-dark-1;
      }

      &:active {
        border-color: transparent;
        box-shadow: 0 0 0 2px @color-green-dark-2;
        outline: 0;
      }

      &:disabled {
        background: @color-gray-1;
        color: @color-gray-5;
        opacity: 0.5;
      }
    }
  }

  &(.dark.success) .native-element {
    background: @color-green;
    color: @color-white;

    &:active {
      box-shadow: 0 0 0 2px @color-green;
    }
  }

  &(.dark.danger) .native-element {
    background: @color-red;
    color: @color-white;

    &:active {
      box-shadow: 0 0 0 2px @color-red;
    }
  }

  &(.dark.warning) .native-element {
    background: @color-yellow;
    color: @color-gray-8;

    &:active {
      box-shadow: 0 0 0 2px @color-yellow;
    }
  }

  &(.dark.alt) .native-element {
    background: #7f5aea;
    color: @color-white;

    &:active {
      box-shadow: 0 0 0 2px #7f5aea;
    }
  }

  // @Prop light variation
  &(.light) {
    .native-element {
      background: @color-green-light-4;
      border-color: transparent;
      color: @color-green-dark-1;

      &:hover,
      &:active,
      &:focus {
        background: @color-green-light-3;
        color: @color-green-dark-3;
      }

      &:active {
        border-color: transparent;
        box-shadow: 0 0 0 2px @color-green-light-1;
        outline: 0;
      }

      &:disabled {
        background: @color-gray-1;
        color: @color-gray-5;
        opacity: 0.5;
      }
    }
  }

  &(.light.success) .native-element {
    background: @color-green-light-4;
    color: @color-green-dark-1;

    &:active {
      box-shadow: 0 0 0 2px @color-green-light-4;
    }
  }

  &(.light.danger) .native-element {
    background: @color-red-light-4;
    color: @color-red-dark-1;

    &:active {
      box-shadow: 0 0 0 2px @color-red-light-4;
    }
  }

  &(.light.warning) .native-element {
    background: @color-yellow-light-4;
    color: @color-yellow-dark-3;

    &:active {
      box-shadow: 0 0 0 2px @color-yellow-light-4;
    }
  }

  &(.light.alt) .native-element {
    background: #dacdff;
    color: @color-gray-8;

    &:active {
      box-shadow: 0 0 0 2px #dacdff;
    }
  }

  // @Prop loading
  &([loading]) {
    .native-element {
      cursor: not-allowed;
    }

    [class^="button-loading-"]::after {
      content: "";
      border-radius: 50%;
      border: 2px solid @color-gray-2;
      border-top-color: currentColor;
      width: @space-3;
      height: @space-3;
      animation: loadingAnimation 1s infinite cubic-bezier(0.4, 0.4, 0.85, 1);
    }
  }

  &([loading="right"]) .button-loading-right {
    display: flex;
    margin-left: @space-2;
  }

  &([loading="left"]) .button-loading-left {
    display: flex;
    margin-right: @space-2;
  }

  &([loading="only"]) {
    slot {
      visibility: hidden;
    }

    .button-loading-only {
      display: flex;
      position: relative;
      left: calc(50% - @space-2);
    }
  }

  // @Prop href
  ([href]) .native-element {
    text-decoration: underline;
  }

  // @Prop small size
  ([size="small"]) .native-element {
    font-weight: normal;
    padding: 5px 12px 6px;
  }

  // @Prop large size
  ([size="large"]) .native-element {
    padding: 14px 24px;
  }

  // @Prop block width
  ([width="full"]) .native-element {
    border: 0;
    border-radius: 0;
    width: 100%;
  }

  // @Prop inherit width
  ([width="inherit"]) .native-element {
    width: 100%;
  }

  // @Prop button-only
  &(.button-icon-only) .native-element {
    padding: 8px 9px;
  }

  // @Prop circle radius
  &([radius="circle"]) .native-element {
    border-radius: 50%;
  }
}

// @Prop basic/default button styles with intentional lower specificity
.native-element {
  background: @color-white;
  border-radius: @border-radius-md;
  border: 1px solid @color-gray-3;
  box-shadow: 0 0 0 0 transparent;
  box-sizing: border-box;
  color: @color-gray-8;
  display: flex;
  align-items: center;
  font-kerning: none;
  font-size: inherit;
  font-weight: bold;
  max-width: 100%;
  outline: 0;
  padding: 8px 15px 9px;
  position: relative;
  text-align: center;
  text-decoration: none;
  text-overflow: ellipsis;
  transition: background 0.12s cubic-bezier(0.47, 0, 0.75, 0.72),
    border-color 0.12s cubic-bezier(0.47, 0, 0.75, 0.72),
    box-shadow 0.12s cubic-bezier(0.47, 0, 0.75, 0.72),
    color 0.12s cubic-bezier(0.47, 0, 0.75, 0.72);
  white-space: nowrap;

  &:hover {
    border-color: @color-gray-5;
    cursor: pointer;
  }

  &:focus {
    border-color: @color-gray-7;
    outline: fade(@color-blue, 20%) solid 2px;
    outline-offset: 1px;
  }

  &:active {
    border-color: transparent;
    box-shadow: 0 0 0 2px @color-gray-5;
    outline: 0;
  }

  &:disabled {
    background: @color-gray-1;
    border-color: transparent;
    color: @color-gray-5;
    cursor: not-allowed;
    opacity: 0.5;
  }

  [class^="button-loading-"] {
    display: none;
  }
}

@keyframes loadingAnimation {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
