@import (reference) "https://unpkg.com/@core-ds/primitives/core-primitives.less";

// :host targets the custom element compiled by Stencil
:host {
  display: inline-flex;
  font: 14px "Inter", sans-seif;

  // @Prop primary variation
  ([variation="primary"]) .native-element {
    background: @color-blue;
    border-color: transparent;
    color: @color-white;

    &:hover {
      background: @color-blue-dark-1;
    }

    &:active,
    &:focus {
      background: @color-blue-dark-2;
    }

    &[disabled] {
      background: @color-gray-1;
      color: @color-gray-5;
    }

    .button-loading::after {
      border: 2px solid fade(@color-white, 40%);
      border-top-color: @color-white;
    }
  }

  // @Prop secondary variation
  ([variation="secondary"]) .native-element {
    background: @color-gray-1;
    border-color: transparent;

    &:hover {
      background: @color-gray-2;
    }

    &:active,
    &:focus {
      background: @color-gray-3;
    }

    &[disabled] {
      background: @color-gray-1;
      color: @color-gray-5;
    }
  }

  // @Prop dark variation
  ([variation="dark"]) .native-element {
    background: @color-green;
    border-color: transparent;
    color: @color-white;

    &:hover {
      background: @color-red;
    }

    &:active,
    &:focus {
      background: @color-yellow;
      color: @color-gray-8;
    }

    &[disabled] {
      background: @color-black;
      color: @color-white;
    }

    .button-loading::after {
      border: 2px solid fade(@color-white, 40%);
      border-top-color: @color-white;
    }
  }

  // @Prop light variation
  ([variation="light"]) .native-element {
    background: @color-green-light-4;
    border-color: transparent;
    color: @color-green-dark-1;

    &:hover {
      background: @color-red-light-4;
      color: @color-red-dark-1;
    }

    &:active,
    &:focus {
      background: @color-yellow-light-4;
      color: @color-yellow-dark-1;
    }

    &[disabled] {
      background: @color-gray-1;
      color: @color-gray-8;
    }

    .button-loading::after {
      border: 2px solid fade(@color-green, 40%);
      border-top-color: @color-green;
    }
  }

  // @Prop href
  ([href]) .native-element {
    text-decoration: underline;
  }

  // @Prop small size
  ([size="small"]) .native-element {
    font-weight: normal;
    padding: 5px 12px 6px;
  }

  // @Prop large size
  ([size="large"]) .native-element {
    padding: 14px 24px;
  }

  // @Prop block width
  ([width="full"]) .native-element {
    border: 0;
    border-radius: 0;
    width: 100%;
  }

  // @Prop inherit width
  ([width="inherit"]) .native-element {
    width: 100%;
  }

  // @Prop loading
  ([loading]) .native-element {
    user-select: none;

    .button-loading {
      display: flex;
    }

    slot {
      visibility: hidden;
    }
  }

  // @Prop button-only
  &(.button-icon-only) .native-element {
    padding: 8px 9px;
  }

  // @Prop circle radius
  &([radius="circle"]) .native-element {
    border-radius: 50%;
  }
}

// .loading outside of :root for specificity
.button-loading {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  cursor: default;

  &::after {
    content: "";
    border-radius: 50%;
    border: 2px solid @color-gray-2;
    border-top-color: currentColor;
    width: @space-4;
    height: @space-4;
    margin: auto;
    animation: loadingAnimation 1s infinite cubic-bezier(0.4, 0.4, 0.85, 1);
  }
}

.native-element {
  background: @color-white;
  border-radius: @border-radius-md;
  border: 1px solid @color-gray-3;
  box-sizing: border-box;
  color: @color-gray-8;
  display: flex;
  font-kerning: none;
  font-size: inherit;
  font-weight: bold;
  max-width: 100%;
  outline: 0;
  padding: 8px 15px 9px;
  position: relative;
  text-align: center;
  text-decoration: none;
  text-overflow: ellipsis;
  transition: background 0.12s cubic-bezier(0.47, 0, 0.75, 0.72),
    border 0.12s cubic-bezier(0.47, 0, 0.75, 0.72),
    color 0.12s cubic-bezier(0.47, 0, 0.75, 0.72);
  white-space: nowrap;

  &:hover {
    border-color: @color-gray-5;
    cursor: pointer;
  }

  &:focus {
    border-color: @color-gray-7;
    outline: fade(@color-blue, 20%) solid 2px;
    outline-offset: 1px;
  }

  &:active {
    border-color: @color-gray-7;
    outline: 0;
  }

  &[disabled] {
    background: @color-gray-1;
    border-color: transparent;
    color: @color-gray-5;
    cursor: not-allowed;
  }

  .button-loading {
    display: none;
  }
}

@keyframes loadingAnimation {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
