@focus-box-shadow-transparent: 0 0 0 1px transparent inset;

// `:host` targets the custom element compiled by Stencil
:host {
  display: inline-flex;
  max-width: 100%;
  vertical-align: middle;

  // @Prop basic variation
  &([variation="basic"]) {
    .native-element {
      background-color: @color-white;
      color: @color-gray-8;

      &:not([disabled]) {
        box-shadow: 0 0 0 1px @color-gray-3 inset;
      }

      &:not([disabled]):not([loading]) {
        &:hover {
          box-shadow: 0 0 0 1px @color-gray-5 inset;
        }

        &:active {
          box-shadow: 0 0 0 2px @color-gray-5 inset;
        }
      }

      &[disabled] {
        background-color: @color-gray-1;
        color: @color-gray-4;
      }
    }
  }

  &([variation="basic"][loading]:not([loading="false"])) {
    .native-element {
      cursor: not-allowed;
    }

    .text-wrap {
      color: @color-gray-3;
    }

    .button-loading::after {
      border: 2px solid @color-gray-3;
      border-top-color: currentColor;
    }
  }

  // @Prop primary variation
  &([variation="primary"]) {
    .native-element {
      background-color: @color-blue;
      color: @color-white;

      &:not([disabled]):not([loading]) {
        box-shadow: 0 0 0 1px @color-blue inset;

        &:hover {
          background-color: @color-blue-dark-1;
          box-shadow: @focus-box-shadow-transparent;
        }

        &:active {
          box-shadow: 0 0 0 2px @color-blue-dark-2 inset;
        }
      }

      &[disabled] {
        background-color: fade(@color-blue, 50%);
      }
    }
  }

  &([variation="primary"][loading]:not([loading="false"])) {
    .native-element {
      cursor: not-allowed;
    }

    .text-wrap {
      color: @color-blue-light-2;
    }

    .button-loading::after {
      border: 2px solid @color-blue-light-2;
      border-top-color: currentColor;
    }
  }

  // @Prop secondary variation
  &([variation="secondary"]) {
    .native-element {
      background-color: @color-gray-1;

      &:not([disabled]):not([loading]) {
        box-shadow: @focus-box-shadow-transparent;

        &:hover {
          background-color: @color-gray-2;
        }

        &:active {
          box-shadow: 0 0 0 2px @color-gray-4 inset;
        }
      }

      &[disabled] {
        background-color: @color-gray-1;
        color: @color-gray-4;
      }
    }
  }

  // @Prop dark variation
  &([variation="dark"]),
  &([variation="dark"][status="success"]) {
    .native-element {
      background-color: @color-green;
      color: @color-white;

      &:not([disabled]):not([loading]) {
        box-shadow: @focus-box-shadow-transparent;

        &:hover {
          background-color: @color-green-dark-1;
        }

        &:active {
          box-shadow: 0 0 0 2px @color-green-dark-2 inset;
        }
      }

      &[disabled] {
        background-color: fade(@color-green, 50%);
      }
    }
  }

  &([variation="dark"][status="danger"]) {
    .native-element {
      background-color: @color-red;

      &:not([disabled]):not([loading]) {
        box-shadow: @focus-box-shadow-transparent;

        &:hover {
          background-color: @color-red-dark-1;
        }

        &:active {
          box-shadow: 0 0 0 2px @color-red-dark-2 inset;
        }
      }
    }
  }

  &([variation="dark"][status="warning"]) {
    .native-element {
      background-color: @color-yellow;
      color: @color-gray-8;

      &:not([disabled]):not([loading]) {
        box-shadow: @focus-box-shadow-transparent;

        &:hover {
          background-color: @color-yellow-dark-1;
        }

        &:active {
          box-shadow: 0 0 0 2px @color-yellow-dark-2 inset;
        }
      }
    }
  }

  // @Prop light variation
  &([variation="light"]),
  &([variation="light"][status="success"]) {
    .native-element {
      background-color: @color-green-light-4;
      color: @color-green-dark-1;

      &:not([disabled]):not([loading]) {
        box-shadow: 0 0 0 1px @color-green-light-4 inset;

        &:hover {
          background-color: @color-green-light-3;
          box-shadow: @focus-box-shadow-transparent;
          color: @color-green-dark-3;
        }

        &:active {
          box-shadow: 0 0 0 2px @color-green-light-1 inset;
        }
      }

      &[disabled] {
        background-color: @color-gray-1;
        color: @color-gray-4;
      }
    }
  }

  &([variation="light"][status="danger"]) {
    .native-element {
      background-color: @color-red-light-4;
      color: @color-red-dark-1;

      &:not([disabled]):not([loading]) {
        box-shadow: 0 0 0 1px @color-red-light-4 inset;

        &:hover {
          background-color: @color-red-light-3;
          box-shadow: @focus-box-shadow-transparent;
          color: @color-red-dark-1;
        }

        &:active {
          box-shadow: 0 0 0 2px @color-red-light-1 inset;
        }
      }
    }
  }

  &([variation="light"][status="warning"]) {
    .native-element {
      background-color: @color-yellow-light-4;
      color: @color-yellow-dark-3;

      &:not([disabled]):not([loading]) {
        box-shadow: 0 0 0 1px @color-yellow-light-4 inset;

        &:hover {
          background-color: @color-yellow-light-3;
          box-shadow: @focus-box-shadow-transparent;
          color: @color-yellow-dark-3;
        }

        &:active {
          box-shadow: 0 0 0 2px @color-yellow-light-1 inset;
        }
      }
    }
  }

  // @Prop borderless variation
  &([variation="borderless"]) {
    .native-element {
      background-color: transparent;

      &:not([disabled]):not([loading]) {
        box-shadow: 0 0 0 0 transparent inset;

        &:hover,
        &:active {
          background-color: transparent;
          box-shadow: 0 0 0 0 transparent inset;
        }
      }

      &[disabled] {
        background-color: @color-gray-1;
        color: @color-gray-4;
      }
    }
  }

  //@Prop status success
  &([status="success"]) {
    .native-element {
      background-color: @color-green;
      color: @color-white;

      &:not([disabled]):not([loading]) {
        box-shadow: 0 0 0 1px @color-green inset;

        &:hover {
          background-color: @color-green-dark-1;
          box-shadow: @focus-box-shadow-transparent;
        }

        &:active {
          box-shadow: 0 0 0 2px @color-green-dark-2 inset;
        }
      }

      &[disabled] {
        background-color: fade(@color-green, 50%);
      }
    }
  }

  //@Prop status danger
  &([status="danger"]) {
    .native-element {
      background-color: @color-red;
      color: @color-white;

      &:not([disabled]):not([loading]) {
        box-shadow: 0 0 0 1px @color-red inset;

        &:hover {
          background-color: @color-red-dark-1;
          box-shadow: @focus-box-shadow-transparent;
        }

        &:active {
          box-shadow: 0 0 0 2px @color-red-dark-2 inset;
        }
      }

      &[disabled] {
        background-color: fade(@color-red, 50%);
      }
    }
  }

  //@Prop status warning
  &([status="warning"]) {
    .native-element {
      background-color: @color-yellow;
      color: @color-gray-8;

      &:not([disabled]):not([loading]) {
        box-shadow: 0 0 0 1px @color-yellow inset;

        &:hover {
          background-color: @color-yellow-dark-1;
          box-shadow: @focus-box-shadow-transparent;
        }

        &:active {
          box-shadow: 0 0 0 2px @color-yellow-dark-2 inset;
        }
      }

      &[disabled] {
        background-color: fade(@color-yellow, 50%);
      }
    }
  }

  //@Prop status success icon-only
  &([status="success"][size="default"][loading="icon-only"]) {
    .native-element {
      background-color: @color-white;
      box-shadow: 0 0 0 1px @color-green-light-2 inset;
      color: @color-green;

      &:hover {
        background-color: @color-white;
        box-shadow: 0 0 0 1px @color-green inset;
      }

      &:active {
        box-shadow: 0 0 0 2px @color-green-dark-1 inset;
      }
    }
  }

  &([status="success"][size="primary"][loading="icon-only"]) {
    .native-element {
      background-color: @color-green;
      box-shadow: 0 0 0 1px @color-green inset;
      color: @color-white;

      &:hover {
        background-color: @color-green-dark-1;
        box-shadow: @focus-box-shadow-transparent;
      }

      &:active {
        box-shadow: 0 0 0 2px @color-green-dark-2 inset;
      }
    }
  }

  &([status="success"][size="secondary"][loading="icon-only"]) {
    .native-element {
      background-color: @color-green-light-4;
      border-color: @color-green-light-4;
      box-shadow: @focus-box-shadow-transparent;

      &:hover {
        background-color: @color-green-light-3;
        box-shadow: @focus-box-shadow-transparent;
        color: @color-green-dark-3;
      }

      &:active {
        box-shadow: 0 0 0 2px @color-green-light-2 inset;
      }
    }
  }

  //@Prop status danger icon-only
  &([status="danger"][size="default"][loading="icon-only"]) {
    .native-element {
      background-color: @color-white;
      box-shadow: 0 0 0 1px @color-red-light-2 inset;
      color: @color-red;

      &:hover {
        background-color: @color-white;
        box-shadow: 0 0 0 1px @color-red inset;
      }

      &:active {
        box-shadow: 0 0 0 2px @color-red-dark-1 inset;
      }
    }
  }

  &([status="danger"][size="primary"][loading="icon-only"]) {
    .native-element {
      background-color: @color-red;
      box-shadow: 0 0 0 1px @color-red inset;
      color: @color-white;

      &:hover {
        background-color: @color-red-dark-1;
        box-shadow: @focus-box-shadow-transparent;
      }

      &:active {
        box-shadow: 0 0 0 2px @color-red-dark-2 inset;
      }
    }
  }

  &([status="danger"][size="secondary"][loading="icon-only"]) {
    .native-element {
      background-color: @color-red-light-4;
      border-color: @color-red-light-4;
      box-shadow: @focus-box-shadow-transparent;

      &:hover {
        background-color: @color-red-light-3;
        box-shadow: @focus-box-shadow-transparent;
      }

      &:active {
        box-shadow: 0 0 0 2px @color-red-light-2 inset;
      }
    }
  }

  //@Prop status warning icon-only
  &([status="warning"][size="default"][loading="icon-only"]) {
    .native-element {
      background-color: @color-white;
      box-shadow: 0 0 0 1px @color-yellow-light-2 inset;
      color: @color-yellow-dark-3;

      &:hover {
        background-color: @color-white;
        box-shadow: 0 0 0 1px @color-yellow inset;
      }

      &:active {
        box-shadow: 0 0 0 2px @color-yellow-dark-1 inset;
      }
    }
  }

  &([status="warning"][size="primary"][loading="icon-only"]) {
    .native-element {
      background-color: @color-yellow;
      box-shadow: 0 0 0 1px @color-yellow inset;
      color: @color-gray-8;

      &:hover {
        background-color: @color-yellow-dark-1;
        box-shadow: @focus-box-shadow-transparent;
      }

      &:active {
        box-shadow: 0 0 0 2px @color-yellow-dark-2 inset;
      }
    }
  }

  &([status="warning"][size="secondary"][loading="icon-only"]) {
    .native-element {
      background-color: @color-yellow-light-4;
      border-color: @color-yellow-light-4;
      box-shadow: @focus-box-shadow-transparent;

      &:hover {
        background-color: @color-yellow-light-3;
        box-shadow: @focus-box-shadow-transparent;
      }

      &:active {
        box-shadow: 0 0 0 2px @color-yellow-light-2 inset;
      }
    }
  }

  // @Prop loading
  &([loading="right"]),
  &([loading="left"]),
  &([loading="only"]) {
    .button-loading {
      display: flex;

      &::after {
        content: "";
        border-radius: 50%;
        border: 2px solid @color-gray-2;
        border-top-color: currentColor;
        width: @space-3;
        height: @space-3;
        animation: loadingAnimation 1s infinite cubic-bezier(0.4, 0.4, 0.85, 1);
      }
    }
  }

  &([loading="right"]) .button-loading {
    margin-left: @space-2;
  }

  &([loading="left"]) .button-loading {
    margin-right: @space-2;
    order: -1;
  }

  &([loading="only"]) {
    slot {
      visibility: hidden;
    }

    .button-loading {
      position: absolute;
      left: calc(50% - @space-2);
    }
  }

  // @Prop href
  ([href]) .native-element {
    text-decoration: underline;
  }

  // @Prop small size
  ([size="small"]) {
    .native-element {
      font-weight: normal;
      padding-right: @space-3;
      padding-left: @space-3;
    }

    .text-wrap {
      padding-top: 6px;
      padding-bottom: 6px;
    }
  }

  ([size="small"][radius="round"]) .native-element {
    border-radius: 30px / 2; // half button height
  }

  // @Prop large size
  ([size="large"]) {
    .native-element {
      line-height: 20px;
      padding-right: @space-5;
      padding-left: @space-5;
    }

    .text-wrap {
      padding-top: 14px;
      padding-bottom: 14px;
    }
  }

  ([size="large"][radius="round"]) .native-element {
    border-radius: 48px / 2; // half button height
  }

  // @Prop block width
  ([width="full"]) .native-element {
    border: 0;
    border-radius: 0;
    box-sizing: border-box;
    width: 100%;
  }

  // @Prop inherit width
  ([width="inherit"]) .native-element {
    box-sizing: border-box;
    width: 100%;
  }

  // @Prop icon-only
  &(.icon-only) .native-element {
    padding-right: 10px;
    padding-left: 10px;
  }

  // @Prop border radius
  &([radius="0"]) .native-element {
    border-radius: 0;
  }

  &([radius="round"]) .native-element {
    border-radius: 36px / 2; // half button height
  }
}

// @Prop basic (default) button styles with intentional lower specificity
.native-element {
  align-items: center;
  border-radius: @border-radius-md;
  border: 0;
  box-sizing: border-box;
  display: flex;
  font: inherit;
  font-weight: bold;
  line-height: 18px;
  max-width: inherit;
  outline: none;
  padding: 0 15px;
  position: relative;
  text-decoration: none;
  transition: background-color 0.12s ease-in-out, border 0.12s ease-in-out,
    box-shadow 0.12s ease-in-out, color 0.12s ease-in-out;

  &:not([disabled]):not([loading]):hover,
  &:not([disabled]):not([loading]):active {
    cursor: pointer;
  }

  &[disabled] {
    background-color: @color-gray-1;
    box-shadow: @focus-box-shadow-transparent;
    color: @color-gray-4;
    cursor: not-allowed;
  }

  .text-wrap {
    min-height: @space-4;
    overflow-x: hidden;
    padding-top: 9px;
    padding-bottom: 9px;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .button-loading {
    display: none;
  }
}

@keyframes loadingAnimation {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
