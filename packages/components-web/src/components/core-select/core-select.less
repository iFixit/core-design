// `shadow: false' is set in `core-select.tsx`, so we target the custom-element selector directly instead of `:host` and remove the LESS selector wrapping parenthesis for targeting in shadow-dom
core-select {
  .inter-font;
  color: @color-gray-8;
  display: inline-flex;
  max-width: 100%;
  vertical-align: middle;

  // @Prop icon
  &[icon] .native-element {
    padding-left: 40px;
  }

  // @Prop disabled
  &[disabled]:not([disabled="false"]),
  &[disabled="true"] {
    cursor: not-allowed;

    core-icon,
    label {
      color: @color-gray-4 !important;
    }

    .native-element {
      background-color: @color-gray-1;
      border-color: transparent;
      color: @color-gray-4;
      pointer-events: none;
    }
  }

  // @Prop size large
  &[size="large"] .native-element {
    font-size: 16px;
    padding: 14px 20px 14px 50px;
  }

  // @Prop labelDisplay
  &[label-display="inline"] {
    .select-outer {
      display: flex;
      justify-content: center;
    }

    label {
      align-self: center;
      display: flex;
      margin-bottom: 0;
    }
  }

  // @Prop labelPositionProps
  &[label-position="left"] label {
    margin-right: @space-2;
  }

  // @Prop labelDisplay + labelPositionProps
  &[label-display="inline"][label-position="right"] {
    .select-outer {
      flex-direction: row-reverse;
    }

    label {
      margin-left: @space-2;
    }
  }

  &[label-display="block"][label-position="right"] {
    label {
      justify-content: flex-end;
    }
  }

  // @Prop error
  &[error]:not([error="false"]),
  &[error="true"] {
    color: @color-red;

    core-icon,
    label {
      color: @color-red;
    }

    .native-element:not(:disabled) {
      border-color: @color-red-light-1;

      &:focus,
      &:active {
        border-color: @color-red;
        box-shadow: 0 0 0 3px fade(@color-red-light-1, 30%);
      }
    }
  }

  // @Prop success
  &[success]:not([success="false"]),
  &[success="true"] {
    color: @color-green;

    core-icon,
    label {
      color: @color-green;
    }

    .native-element:not(:disabled) {
      border-color: @color-green-light-1;

      &:focus,
      &:active {
        border-color: @color-green;
        box-shadow: 0 0 0 3px fade(@color-green-light-1, 30%);
      }
    }
  }

  label {
    color: @color-gray-8;
    display: flex;
    margin-bottom: @space-2;
    transition: color 0.12s ease-in-out;
  }

  .select-inner {
    position: relative;

    core-icon {
      color: @color-gray-5;
      position: absolute;
      top: 50%;
      right: @space-2;
      transform: translateY(-50%);
      z-index: -1;
    }
  }

  .native-element {
    background-color: transparent;
    border: 1px solid @color-gray-3;
    border-radius: @space-1;
    box-shadow: 0 0 0 0 transparent;
    box-sizing: border-box;
    color: @color-gray-8;
    font: inherit;
    line-height: 36px;
    min-height: 36px;
    outline: none;
    padding-right: @space-6;
    padding-left: @space-4;
    transition: box-shadow 0.12s ease-in-out;

    &::placeholder {
      color: @color-gray-4;
    }

    &:not(:disabled) {
      &:focus,
      &:active {
        border-color: @color-gray-5;
        box-shadow: @focus-box-shadow;
      }
    }

    & > option {
      padding: 0;
    }
  }

  @supports (-webkit-appearance: none) or (-moz-appearance: none) {
    .native-element {
      appearance: none;
    }
  }
}
