@import (reference) "../../assets/font/inter/inter.css";
@import (reference) "https://unpkg.com/@core-ds/primitives/core-primitives.less";

// :host targets the custom element compiled by Stencil
:host {
  box-sizing: border-box;
  color: @color-gray-5;
  font-family: "Inter", sans-serif;
  font-feature-settings: "ss01" on, "ss02" on;
  font-size: 14px;
  line-height: 1.142857;
  width: inherit;

  // @Prop color
  // TODO: (IR) figure out an automated way to maintain
  &([color=blue]) {
    color: @color-blue;
  }

  &([color=green]) {
    color: @color-green;
  }

  &([color=yellow]) {
    color: @color-yellow;
  }

  &([color=red]) {
    color: @color-red;
  }

  &([color=white]) {
    color: @color-white;
  }

  &([color=black]) {
    color: @color-black;
  }

  &([color=blue-light-4]) {
    color: @color-blue-light-4;
  }

  &([color=blue-light-3]) {
    color: @color-blue-light-3;
  }

  &([color=blue-light-2]) {
    color: @color-blue-light-2;
  }

  &([color=blue-light-1]) {
    color: @color-blue-light-1;
  }

  &([color=blue-dark-1]) {
    color: @color-blue-dark-1;
  }

  &([color=blue-dark-2]) {
    color: @color-blue-dark-2;
  }

  &([color=blue-dark-3]) {
    color: @color-blue-dark-3;
  }

  &([color=blue-dark-4]) {
    color: @color-blue-dark-4;
  }

  &([color=green-light-4]) {
    color: @color-green-light-4;
  }

  &([color=green-light-3]) {
    color: @color-green-light-3;
  }

  &([color=green-light-2]) {
    color: @color-green-light-2;
  }

  &([color=green-light-1]) {
    color: @color-green-light-1;
  }

  &([color=green-dark-1]) {
    color: @color-green-dark-1;
  }

  &([color=green-dark-2]) {
    color: @color-green-dark-2;
  }

  &([color=green-dark-3]) {
    color: @color-green-dark-3;
  }

  &([color=green-dark-4]) {
    color: @color-green-dark-4;
  }

  &([color=yellow-light-4]) {
    color: @color-yellow-light-4;
  }

  &([color=yellow-light-3]) {
    color: @color-yellow-light-3;
  }

  &([color=yellow-light-2]) {
    color: @color-yellow-light-2;
  }

  &([color=yellow-light-1]) {
    color: @color-yellow-light-1;
  }

  &([color=yellow-dark-1]) {
    color: @color-yellow-dark-1;
  }

  &([color=yellow-dark-2]) {
    color: @color-yellow-dark-2;
  }

  &([color=yellow-dark-3]) {
    color: @color-yellow-dark-3;
  }

  &([color=yellow-dark-4]) {
    color: @color-yellow-dark-4;
  }

  &([color=red-light-4]) {
    color: @color-red-light-4;
  }

  &([color=red-light-3]) {
    color: @color-red-light-3;
  }

  &([color=red-light-2]) {
    color: @color-red-light-2;
  }

  &([color=red-light-1]) {
    color: @color-red-light-1;
  }

  &([color=red-dark-1]) {
    color: @color-red-dark-1;
  }

  &([color=red-dark-2]) {
    color: @color-red-dark-2;
  }

  &([color=red-dark-3]) {
    color: @color-red-dark-3;
  }

  &([color=red-dark-4]) {
    color: @color-red-dark-4;
  }

  &([color=gray-1]) {
    color: @color-gray-1;
  }

  &([color=gray-2]) {
    color: @color-gray-2;
  }

  &([color=gray-3]) {
    color: @color-gray-3;
  }

  &([color=gray-4]) {
    color: @color-gray-4;
  }

  &([color=gray-5]) {
    color: @color-gray-5;
  }

  &([color=gray-6]) {
    color: @color-gray-6;
  }

  &([color=gray-7]) {
    color: @color-gray-7;
  }

  &([color=-gray-8]) {
    color: @color-gray-8;
  }

  // @Prop type disabled
  &([disabled]) .native-element {
    color: fade(@color-gray-5, 50%);
    cursor: not-allowed;
  }

  &(.block) {
    box-sizing: border-box;
    display: flex;
    width: 100%;

    .native-element {
      align-items: flex-start;
      flex-direction: column;
    }

    .label-inner {
      align-items: center;
      display: flex;
      justify-content: space-between;
      width: inherit;
    }

    slot[name="label-input"] {
      display: flex;
      margin-top: @space-2;
      width: inherit;
    }

    .help-url {
      color: @color-gray-3;
      transition: color 0.12s ease-in-out;

      &:hover {
        color: @color-gray-4;
      }
    }
  }

  &(.inline) {
    display: inline-flex;

    .label-inner {
      display: inline-flex;
      align-items: center;
    }
  }
}

.native-element {
  width: inherit;
}
